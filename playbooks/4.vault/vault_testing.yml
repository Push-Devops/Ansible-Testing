- name: Run AWS Cli Commands On All Servers
  hosts: pvt
  gather_facts: yes
  become: yes
  become_user: root
  serial: 3
  vars:
    user_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      35633433613537393634643130343662643862376530623830373865366638646430383032633463
      6136343561646663623432306565386266383763626261310a323737616565363935633062346536
      38363439623938336534623331663236646135626436663962316632663332656662646431663336
      6265353764313339300a396136323631343937393730363739623637343636336631356135326230
      6439
  tasks:
    - name: Create .aws folder
      shell: mkdir -p /root/.aws
      ignore_errors: yes
    - name: Copy Encrypted File To /tmp
      copy:
        src: /tmp/{{item}} #This Encrypted File Must Be Created Prior To Running The Playbook.
        dest: /tmp/{{item}}
        owner: root
        group: root
        mode: "0600"
      with_items:
        - aws_creds
        - tls.key
        - tls.crt
    - name: Copy Encrypted Credentials File To .aws folder
      copy:
        src: /tmp/aws_creds #This Encrypted File Must Be Created Prior To Running The Playbook.
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: "0600"
    - name: Check S3 Buckets
      shell: aws s3 ls | cut -d " " -f 3
      register: buckets
    - name: Print Bucket Name
      debug:
        var: buckets
    - name: Get VPCS
      shell: aws ec2 describe-vpcs | jq ".Vpcs[].VpcId" -r
      register: vpcs
    - name: Print VPC ID
      debug:
        var: vpcs
    - name: Install passlib
      hosts: all
      become: yes
      tasks:
        - name: Install passlib
          pip:
            name: passlib
            state: present
    - name: Creating admin "{{item}}"
      user:
        name: "{{item}}"
        state: present
        comment: Admin User "{{item}}"
        groups: root
        shell: /bin/bash
        group: sudo
        password: "{{ '%s' | format(user_password) | regex_replace('\n', '') | password_hash('sha512') }}"
        password_expire_min: 1
      with_items:
        - Avinash
        - Saikiran
        - Gnane
    - name: Replace Password Authentication To Yes
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no"
        line: PasswordAuthentication yes
        backup: yes
      notify:
        - Restart SSH Service
  handlers:
    - name: Restart SSH Service
      shell: service sshd restart
    - name: Restart elastic-agent
      shell: sudo heartbeat setup && sudo service heartbeat-elastic start
